---
- name: install ocserv VPN server
  tags:
    - ipa-vpnserver
    - package-install
    - network
  package: name=ocserv state=present
  when: package_install

- name: Open Firewall services for ocserv VPN server
  tags:
    - ipa-vpnserver
    - firewall
  firewalld:
    service={{ item }}
    permanent=true
    state=enabled
    immediate=yes
  with_items:
    - https
  when: has_firewalld.stat.exists

- name: Open Firewall DTLS UDP port for ocserv VPN server
  tags:
    - ipa-vpnserver
    - firewall
  firewalld:
    port={{ item }}
    permanent=true
    state=enabled
    immediate=yes
  with_items:
    - 443/udp
  when: has_firewalld.stat.exists

# http://www.infradead.org/ocserv/recipes-ocserv-pseudo-bridge.html
- name: Enable IPv4 proxy_arp
  tags:
    - ipa-vpnserver
    - ipa-install
  sysctl: name="net.ipv4.conf.all.proxy_arp" value=1 state=present reload=true

- name: Enable masquerading
  tags:
    - ipa-vpnserver
    - ipa-install
  command: firewall-cmd --add-masquerade
  register: result
  changed_when: "{{ 'ALREADY_ENABLED' not in result.stdout }}"
  when: has_firewalld.stat.exists
  notify:
    - permanent masquerade

- name: Get keytab /etc/ocserv/key.tab content
  tags:
    - ipa-vpnserver
    - ipa-install
  command: klist -ke /etc/ocserv/key.tab
  register: keytab
  changed_when: false
  failed_when: "keytab.rc != 0 and 'not found' not in keytab.stderr"

- name: Check for principal in keytab
  tags:
    - ipa-vpnserver
    - ipa-install
  changed_when: false
  set_fact:
   keytab_ocserv_http_principal: "{{ 'HTTP/{{ ansible_fqdn }}' in keytab.stdout }}"

- name: Create VPN service
  tags:
    - ipa-vpnserver
    - ipa-install
  ipa:
    args="service-add --force HTTP/{{ ansible_fqdn }}"
    password="{{ ipa_admin_password }}"
    ignore_already_exists=true
  when: not keytab_ocserv_http_principal

- name: Add VPN service to keytab /etc/ocserv/key.tab
  tags:
    - ipa-vpnserver
    - ipa-install
  ipa: >
    cmd=ipa-getkeytab
    args="-s $IPA_SERVER -p HTTP/{{ ansible_fqdn }} -k /etc/ocserv/key.tab"
    password="{{ ipa_admin_password }}"
  when: not keytab_ocserv_http_principal

- name: Look for /etc/pki/ocserv/public/server.crt
  tags:
    - ipa-vpnserver
    - ipa-install
  stat: path=/etc/pki/ocserv/public/server.crt
  register: vpn_server_cert

- name: Request certificate /etc/pki/ocserv/public/server.crt with ipa-getcert
  tags:
    - ipa-vpnserver
    - ipa-install
  ipa:
    cmd=ipa-getcert
    args="request -w -k /etc/pki/ocserv/private/server.key -f /etc/pki/ocserv/public/server.crt -T caIPAserviceCert -C 'systemctl reload-or-restart ocserv.service'"
    password="{{ ipa_admin_password }}"
  when: not vpn_server_cert.stat.exists
  notify:
    - restart ocserv

- name: Wait for certmonger
  tags:
    - ipa-vpnserver
    - ipa-install
  waitforcertmonger:

- name: Create a link from /etc/pki/ocserv/cacerts/ca.crt to /etc/ipa/ca.crt
  tags:
    - ipa-vpnserver
    - ipa-install
  file:
    src=/etc/ipa/ca.crt
    dest=/etc/pki/ocserv/cacerts/ca.crt
    state=link
  notify:
    - restart ocserv

- name: Write ocserv.conf
  tags:
    - ipa-vpnserver
    - ipa-install
  template:
    src=ocserv.conf
    dest=/etc/ocserv/ocserv.conf
    force=yes
    backup=true
  notify:
    - restart ocserv

# XXX incomplete, routing is missing

- name: Enable ocserv
  tags:
    - ipa-vpnserver
    - ipa-install
  service: name=ocserv enabled=yes state=started

- name: Template local scripts
  tags:
    - ipa-vpnserver
    - ipa-install
  become: no
  local_action:
    template
    src=../../ipa-inventory/templates/{{ item }}
    dest={{ ipa_script_dir }}/{{ item }}
    mode=0755
  with_items:
    - ipa_kkdcp_openconnect_kinit
    - ipa_kkdcp_openconnect_vpn
  run_once: true

- name: Template local inventory files
  tags:
    - ipa-vpnserver
    - ipa-install
  become: no
  local_action:
    template
    src=../../ipa-inventory/templates/{{ item }}
    dest={{ ipa_data_dir }}/{{ item }}
    mode=0644
  with_items:
    - ipaenv_kkdcp_openconnect
  run_once: true

- name: Write custom krb5.conf
  tags:
    - ipa-vpnserver
    - ipa-install
    - fetch
  become: no
  local_action:
    template
    src=../../ipa-inventory/templates/krb5.conf
    dest={{ ipa_data_dir }}/krb5_kkdcp_openconnect.conf
