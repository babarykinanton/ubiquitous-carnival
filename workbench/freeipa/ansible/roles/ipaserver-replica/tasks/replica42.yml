---
- name: Prepare replication
  tags:
    - ipaserver-replica
    - ipa-install
  command: >
    ipa-replica-prepare
    --password={{ ipa_dm_password }}
    --ip-address={{ ansible_default_ipv4.address }}
    {{ ansible_fqdn }}
  args:
    creates: /var/lib/ipa/replica-info-{{ ansible_fqdn }}.gpg
  delegate_to: "{{item}}"
  with_items: "{{ groups['ipaserver_master'] }}"

- name: Fetch replication file
  tags:
    - ipaserver-replica
    - ipa-install
    - fetch
  fetch:
    src=/var/lib/ipa/replica-info-{{ ansible_fqdn }}.gpg
    dest={{ ipa_data_dir }}/replica-info-{{ ansible_fqdn }}.gpg
    flat=yes
  delegate_to: "{{item}}"
  with_items: "{{ groups['ipaserver_master'] }}"

- name: Copy replication file
  tags:
    - ipaserver-replica
    - ipa-install
  synchronize:
    src={{ ipa_data_dir }}/replica-info-{{ ansible_fqdn }}.gpg
    dest=/var/lib/ipa/replica-info-{{ ansible_fqdn }}.gpg

- name: install replica
  tags:
    - ipaserver-replica
    - ipa-install
  command: >
    ipa-replica-install -U
    --password {{ ipa_dm_password }}
    --admin-password {{ ipa_admin_password }}
    --mkhomedir
    --setup-dns
    --ip-address {{ ansible_default_ipv4.address }}
    --allow-zone-overlap
    {{ '--forwarder=%s' % dns_forwarder['nameservers'][0] if enable_network else '--no-forwarders' }}
    /var/lib/ipa/replica-info-{{ ansible_fqdn }}.gpg
  when: not ipa.configured.server
